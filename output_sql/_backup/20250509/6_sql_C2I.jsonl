{"seed": "/* Creates a table named db with 12 columns: id (bigint), db_name (varchar), driver_class_name (varchar), jdbc_url (varchar), password (varchar), pool_name (varchar), username (varchar), group_name (varchar), balance_type (varchar), minimum_idle (int), maximum_pool_size (int), connection_test_query (varchar). */\nCREATE TABLE `db` (\n  `id` bigint(20) NOT NULL AUTO_INCREMENT,\n  `db_name` varchar(255) DEFAULT NULL,\n  `driver_class_name` varchar(255) DEFAULT NULL,\n  `jdbc_url` varchar(255) DEFAULT NULL,\n  `password` varchar(255) DEFAULT NULL,\n  `pool_name` varchar(255) DEFAULT NULL,\n  `username` varchar(255) DEFAULT NULL,\n  `group_name` varchar(255) DEFAULT '',\n  `balance_type` varchar(50) DEFAULT '',\n  `minimum_idle` int(11) DEFAULT '1',\n  `maximum_pool_size` int(11) DEFAULT '1',\n  `connection_test_query` varchar(255) DEFAULT 'SELECT 1',\n  PRIMARY KEY (`id`)\n) ENGINE=MyISAM AUTO_INCREMENT=7 DEFAULT CHARSET=utf8", "description": "Creates a table named db with 12 columns: id (bigint), db_name (varchar), driver_class_name (varchar), jdbc_url (varchar), password (varchar), pool_name (varchar), username (varchar), group_name (varchar), balance_type (varchar), minimum_idle (int), maximum_pool_size (int), connection_test_query (varchar).", "concepts": ["CREATE TABLE", "AUTO_INCREMENT", "PRIMARY KEY", "VARCHAR", "INT", "DEFAULT"], "instruction": "Write a SQL query to create a table named db with 12 columns: id (bigint), db_name (varchar), driver_class_name (varchar), jdbc_url (varchar), password (varchar), pool_name (varchar), username (varchar), group_name (varchar), balance_type (varchar), minimum_idle (int), maximum_pool_size (int), connection_test_query (varchar)."}
{"seed": "/* Selects the difference between the d20_sal and d10_sal columns and the difference between the d20_sal and d30_sal columns from the totals_by_dept table. */\nselect d20_sal - d10_sal as d20_10_diff, d20_sal - d30_sal as d20_30_diff\n  from (\n    select\n      sum(\n        case\n          when deptno = 10 then sal\n        end\n      ) as d10_sal,\n      sum(\n        case\n          when deptno = 20 then sal\n          end\n      ) as d20_sal,\n      sum (\n        case\n          when deptno = 30 then sal\n          end\n      ) as d30_sal\n      from emp\n  ) totals_by_dept", "description": "Selects the difference between the d20_sal and d10_sal columns and the difference between the d20_sal and d30_sal columns from the totals_by_dept table.", "concepts": ["SELECT", "SUM", "CASE", "END", "AS", "FROM", "WHERE", "GROUP BY"], "instruction": "Write a SQL query to select the difference between the d20_sal and d10_sal columns and the difference between the d20_sal and d30_sal columns from the totals_by_dept table."}
{"seed": "/* Sets the SQL mode to \"NO_AUTO_VALUE_ON_ZERO\", which means that the AUTO_INCREMENT value will not be set to 0 when inserting a new row. */\nSET SQL_MODE = \"NO_AUTO_VALUE_ON_ZERO\"", "description": "Sets the SQL mode to \"NO_AUTO_VALUE_ON_ZERO\", which means that the AUTO_INCREMENT value will not be set to 0 when inserting a new row.", "concepts": ["SET", "SQL_MODE", "AUTO_INCREMENT", "NO_AUTO_VALUE_"], "instruction": "Write a SQL query to set the SQL mode to \"NO_AUTO_VALUE_ON_ZERO\", which means that the AUTO_INCREMENT value will not be set to 0 when inserting a new row."}
{"seed": "/* Sets the time zone to UTC. */\nSET time_zone = \"+00:00\"", "description": "Sets the time zone to UTC.", "concepts": ["SET"], "instruction": "Write a SQL query to set the time zone to UTC."}
{"seed": "/* Creates a table named user with 9 columns: user_id (integer), age (integer), first_name (varchar), last_name (varchar), gender (varchar), birth_date (varchar), reg_date (varchar), password (varchar), and email (varchar). */\nCREATE TABLE `user` (\n  `user_id` int(11) NOT NULL,\n  `age` int(11) NOT NULL,\n  `first_name` varchar(45) NOT NULL,\n  `last_name` varchar(45) NOT NULL,\n  `gender` varchar(45) NOT NULL,\n  `birth_date` varchar(45) NOT NULL,\n  `reg_date` varchar(45) NOT NULL,\n  `password` varchar(45) NOT NULL,\n  `email` varchar(45) NOT NULL\n) ENGINE=InnoDB DEFAULT CHARSET=latin1", "description": "Creates a table named user with 9 columns: user_id (integer), age (integer), first_name (varchar), last_name (varchar), gender (varchar), birth_date (varchar), reg_date (varchar), password (varchar), and email (varchar).", "concepts": ["CREATE TABLE", "INT", "VARCHAR", "NOT NULL", "ENGINE", "DEFAULT", "CHARSET"], "instruction": "Write a SQL query to create a table named user with 9 columns: user_id (integer), age (integer), first_name (varchar), last_name (varchar), gender (varchar), birth_date (varchar), reg_date (varchar), password (varchar), and email (varchar)."}
{"seed": "/* Inserts a new user into the users table with the given values. */\nINSERT INTO `user` (`user_id`, `age`, `first_name`, `last_name`, `gender`, `birth_date`, `reg_date`, `password`, `email`) VALUES\n(11328762, 20, 'Edward', 'Tiro', 'Male', 'November 29, 1996', 'May 15, 2016', 'ef2928350f579b0a0ae3f2c3bf882a27', 'dward@tiro.com')", "description": "Inserts a new user into the users table with the given values.", "concepts": ["INSERT INTO", "VALUES", "user_id", "age", "first_name", "last"], "instruction": "Write a SQL query to insert a new user into the users table with the given values."}
{"seed": "/* Drops the table named application_config if it exists. */\nDROP TABLE IF EXISTS `application_config`", "description": "Drops the table named application_config if it exists.", "concepts": ["DROP TABLE"], "instruction": "Write a SQL query to drop the table named application_config if it exists."}
{"seed": "/* Creates a table named application_config with four columns: config_id (integer primary key), config_name (varchar), config_value (varchar), and config_categ (varchar). */\nCREATE TABLE `application_config` (\r\n  `config_id` int(11) NOT NULL,\r\n  `config_name` varchar(45) DEFAULT NULL,\r\n  `config_value` varchar(45) DEFAULT NULL,\r\n  `config_categ` varchar(45) DEFAULT NULL,\r\n  PRIMARY KEY (`config_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8", "description": "Creates a table named application_config with four columns: config_id (integer primary key), config_name (varchar), config_value (varchar), and config_categ (varchar).", "concepts": ["CREATE TABLE", "PRIMARY KEY", "INT", "VARCHAR", "VARCHAR", "VARCHAR"], "instruction": "Write a SQL query to create a table named application_config with four columns: config_id (integer primary key), config_name (varchar), config_value (varchar), and config_categ (varchar)."}
{"seed": "/* Inserts the values (1,'application_style','preset2.css','UI'),(2,'ENTERPRENEUR_SERVED','200','UI_METRIC'),(3,'PROFESSIONAL_NETWORK','77','UI_METRIC'),(4,'GEOGRAPHIES','7','UI_METRIC'),(5,'TEAM_STRENGTH','27','UI_METRIC'),(6,'INCOME_TAX_INDIVIDULA','299','APPLICATION_AMOUNT */\nINSERT INTO `application_config` VALUES (1,'application_style','preset2.css','UI'),(2,'ENTERPRENEUR_SERVED','200','UI_METRIC'),(3,'PROFESSIONAL_NETWORK','77','UI_METRIC'),(4,'GEOGRAPHIES','7','UI_METRIC'),(5,'TEAM_STRENGTH','27','UI_METRIC'),(6,'INCOME_TAX_INDIVIDULA','299','APPLICATION_AMOUNT'),(7,'INCOME_TAX_CORPORATE','199','APPLICATION_AMOUNT'),(8,'IMPORT_EXPORT','3499','APPLICATION_AMOUNT')", "description": "Inserts the values (1,'application_style','preset2.css','UI'),(2,'ENTERPRENEUR_SERVED','200','UI_METRIC'),(3,'PROFESSIONAL_NETWORK','77','UI_METRIC'),(4,'GEOGRAPHIES','7','UI_METRIC'),(5,'TEAM_STRENGTH','27','UI_METRIC'),(6,'INCOME_TAX_INDIVIDULA','299','APPLICATION_AMOUNT", "concepts": ["INSERT INTO", "VALUES", "APPLICATION_CONFIG", "APPLICATION_STYLE", "P"], "instruction": "Write a SQL query to insert the values (1,'application_style','preset2.css','UI'),(2,'ENTERPRENEUR_SERVED','200','UI_METRIC'),(3,'PROFESSIONAL_NETWORK','77','UI_METRIC'),(4,'GEOGRAPHIES','7','UI_METRIC'),(5,'TEAM_STRENGTH','27','UI_METRIC'),(6,'INCOME_TAX_INDIVIDULA','299"}
{"seed": "/* Drops the table named book_keeping_request if it exists. */\nDROP TABLE IF EXISTS `book_keeping_request`", "description": "Drops the table named book_keeping_request if it exists.", "concepts": ["DROP TABLE"], "instruction": "Write a SQL query to drop the table named book_keeping_request if it exists."}
{"seed": "/* Creates a table named book_keeping_request with seven columns: book_keeping_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), updated_dt (datetime). */\nCREATE TABLE `book_keeping_request` (\r\n  `book_keeping_request_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `requestor_full_name` varchar(50) DEFAULT NULL,\r\n  `requestor_phone_number` varchar(15) DEFAULT NULL,\r\n  `requestor_email_id` varchar(75) DEFAULT NULL,\r\n  `requestor_pan_number` varchar(20) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`book_keeping_request_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8", "description": "Creates a table named book_keeping_request with seven columns: book_keeping_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), updated_dt (datetime).", "concepts": ["CREATE TABLE", "AUTO_INCREMENT", "PRIMARY KEY", "VARCHAR", "INT", "DEFAULT"], "instruction": "Write a SQL query to create a table named book_keeping_request with seven columns: book_keeping_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), updated_dt (datetime)."}
{"seed": "/* Drops the table named companies if it exists. */\nDROP TABLE IF EXISTS `companies`", "description": "Drops the table named companies if it exists.", "concepts": ["DROP TABLE"], "instruction": "Write a SQL query to drop the table named companies if it exists."}
{"seed": "/* Creates a table named companies with five columns: company_id (integer primary key), company_name (varchar), company_price (decimal), company_type (varchar), created_dt (datetime), and updated_dt (datetime). */\nCREATE TABLE `companies` (\r\n  `company_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `company_name` varchar(50) DEFAULT NULL,\r\n  `company_price` decimal(10,2) DEFAULT NULL,\r\n  `company_type` varchar(50) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`company_id`),\r\n  UNIQUE KEY `company_id_UNIQUE` (`company_id`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8 COMMENT='Details for company type available'", "description": "Creates a table named companies with five columns: company_id (integer primary key), company_name (varchar), company_price (decimal), company_type (varchar), created_dt (datetime), and updated_dt (datetime).", "concepts": ["CREATE TABLE", "AUTO_INCREMENT", "PRIMARY KEY", "UNIQUE KEY", "DEFAULT", "COMMENT"], "instruction": "Write a SQL query to create a table named companies with five columns: company_id (integer primary key), company_name (varchar), company_price (decimal), company_type (varchar), created_dt (datetime), and updated_dt (datetime)."}
{"seed": "/* Inserts the given values into the companies table. */\nINSERT INTO `companies` VALUES (1,'Private Limited',12999.00,NULL,NULL,NULL),(2,'Limited Liability Partnership',9999.00,NULL,NULL,NULL),(3,'One Person Company',11999.00,NULL,NULL,NULL),(4,'Public Limited Company',42999.00,NULL,NULL,NULL),(5,'Nidhi Limited Company',74999.00,NULL,NULL,NULL),(6,'Section 8 Company',25000.00,NULL,NULL,NULL)", "description": "Inserts the given values into the companies table.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert the given values into the companies table."}
{"seed": "/* Drops the table named company_request if it exists. */\nDROP TABLE IF EXISTS `company_request`", "description": "Drops the table named company_request if it exists.", "concepts": ["DROP TABLE"], "instruction": "Write a SQL query to drop the table named company_request if it exists."}
{"seed": "/* Creates a table named company_request with 11 columns: company_request_id (integer primary key), company_name (varchar), requestor_last_name (varchar), requestor_first_name (varchar), requostor_email (varchar), requestor_phone_no (varchar), requestor_pan_no (varchar), company_id (integer), message (varchar), created_dt (datetime), updated_dt (datetime). */\nCREATE TABLE `company_request` (\r\n  `company_request_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `company_name` varchar(100) NOT NULL,\r\n  `requestor_last_name` varchar(50) DEFAULT NULL,\r\n  `requestor_first_name` varchar(50) DEFAULT NULL,\r\n  `requostor_email` varchar(100) DEFAULT NULL,\r\n  `requestor_phone_no` varchar(30) DEFAULT NULL,\r\n  `requestor_pan_no` varchar(30) DEFAULT NULL,\r\n  `company_id` int(11) DEFAULT NULL,\r\n  `message` varchar(2000) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`company_request_id`),\r\n  KEY `company_id_foreign_key_idx` (`company_id`),\r\n  CONSTRAINT `company_id_foreign_key` FOREIGN KEY (`company_id`) REFERENCES `companies` (`company_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Details of company creation '", "description": "Creates a table named company_request with 11 columns: company_request_id (integer primary key), company_name (varchar), requestor_last_name (varchar), requestor_first_name (varchar), requostor_email (varchar), requestor_phone_no (varchar), requestor_pan_no (varchar), company_id (integer), message (varchar), created_dt (datetime), updated_dt (datetime).", "concepts": ["CREATE TABLE", "INT", "PRIMARY KEY", "VARCHAR", "FOREIGN KEY", "CONSTRAINT", "KEY"], "instruction": "Write a SQL query to create a table named company_request with 11 columns: company_request_id (integer primary key), company_name (varchar), requestor_last_name (varchar), requestor_first_name (varchar), requostor_email (varchar), requestor_phone_no (varchar), requestor_pan_no (varchar), company_id (integer), message (varchar), created_dt (datetime), updated_dt (datetime)."}
{"seed": "/* Drops the table named gst_request if it exists. */\nDROP TABLE IF EXISTS `gst_request`", "description": "Drops the table named gst_request if it exists.", "concepts": ["DROP TABLE"], "instruction": "Write a SQL query to drop the table named gst_request if it exists."}
{"seed": "/* Creates a table named gst_request with five columns: gst_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), updated_dt (datetime). */\nCREATE TABLE `gst_request` (\r\n  `gst_request_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `requestor_full_name` varchar(50) DEFAULT NULL,\r\n  `requestor_phone_number` varchar(15) DEFAULT NULL,\r\n  `requestor_email_id` varchar(75) DEFAULT NULL,\r\n  `requestor_pan_number` varchar(20) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`gst_request_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8", "description": "Creates a table named gst_request with five columns: gst_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), updated_dt (datetime).", "concepts": ["CREATE TABLE", "AUTO_INCREMENT", "PRIMARY KEY", "VARCHAR", "INT", "DEFAULT"], "instruction": "Write a SQL query to create a table named gst_request with five columns: gst_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), updated_dt (datetime)."}
{"seed": "/* Drops the table named import_export_request if it exists. */\nDROP TABLE IF EXISTS `import_export_request`", "description": "Drops the table named import_export_request if it exists.", "concepts": ["DROP TABLE", "IF EXISTS"], "instruction": "Write a SQL query to drop the table named import_export_request if it exists."}
{"seed": "/* Creates a table named import_export_request with seven columns: import_export_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), and updated_dt (datetime). */\nCREATE TABLE `import_export_request` (\r\n  `import_export_request_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `requestor_full_name` varchar(50) DEFAULT NULL,\r\n  `requestor_phone_number` varchar(15) DEFAULT NULL,\r\n  `requestor_email_id` varchar(50) DEFAULT NULL,\r\n  `requestor_pan_number` varchar(15) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`import_export_request_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8", "description": "Creates a table named import_export_request with seven columns: import_export_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), and updated_dt (datetime).", "concepts": ["CREATE TABLE", "AUTO_INCREMENT", "PRIMARY KEY", "VARCHAR", "INT", "DEFAULT"], "instruction": "Write a SQL query to create a table named import_export_request with seven columns: import_export_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), and updated_dt (datetime)."}
{"seed": "/* Drops the table named income_tax_request if it exists. */\nDROP TABLE IF EXISTS `income_tax_request`", "description": "Drops the table named income_tax_request if it exists.", "concepts": ["DROP TABLE", "IF EXISTS"], "instruction": "Write a SQL query to drop the table named income_tax_request if it exists."}
{"seed": "/* Creates a table named income_tax_request with the following columns: income_tax_request_id (integer primary key), requestor_full_name (varchar), requestor_email_id (varchar), requestor_phone_number (varchar), requestor_bank_name (varchar), requestor_ifsc_code (varchar), user_type (varchar), created_dt (datetime), updated_dt (datetime). */\nCREATE TABLE `income_tax_request` (\r\n  `income_tax_request_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `requestor_full_name` varchar(100) DEFAULT NULL,\r\n  `requestor_email_id` varchar(100) DEFAULT NULL,\r\n  `requestor_phone_number` varchar(30) DEFAULT NULL,\r\n  `requestor_bank_name` varchar(45) DEFAULT NULL,\r\n  `requestor_ifsc_code` varchar(45) DEFAULT NULL,\r\n  `user_type` varchar(45) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`income_tax_request_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8", "description": "Creates a table named income_tax_request with the following columns: income_tax_request_id (integer primary key), requestor_full_name (varchar), requestor_email_id (varchar), requestor_phone_number (varchar), requestor_bank_name (varchar), requestor_ifsc_code (varchar), user_type (varchar), created_dt (datetime), updated_dt (datetime).", "concepts": ["CREATE TABLE", "AUTO_INCREMENT", "PRIMARY KEY", "VARCHAR", "INT", "DEFAULT"], "instruction": "Write a SQL query to create a table named income_tax_request with the following columns: income_tax_request_id (integer primary key), requestor_full_name (varchar), requestor_email_id (varchar), requestor_phone_number (varchar), requestor_bank_name (varchar), requestor_ifsc_code (varchar), user_type (varchar), created_dt (datetime), updated_dt (datetime)."}
{"seed": "/* Drops the table loan_request if it exists. */\nDROP TABLE IF EXISTS `loan_request`", "description": "Drops the table loan_request if it exists.", "concepts": ["DROP TABLE"], "instruction": "Write a SQL query to drop the loan_request table if it exists."}
{"seed": "/* Creates a table named loan_request with 8 columns: loan_request_id (integer primary key), requestor_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), loan_id (integer), created_dt (datetime), updated_dt (datetime). */\nCREATE TABLE `loan_request` (\r\n  `loan_request_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `requestor_name` varchar(50) DEFAULT NULL,\r\n  `requestor_phone_number` varchar(20) DEFAULT NULL,\r\n  `requestor_email_id` varchar(75) DEFAULT NULL,\r\n  `requestor_pan_number` varchar(15) DEFAULT NULL,\r\n  `loan_id` int(11) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`loan_request_id`),\r\n  KEY `loan_id_foreign_key_idx` (`loan_id`),\r\n  CONSTRAINT `loan_id_foreign_key` FOREIGN KEY (`loan_id`) REFERENCES `loan_types` (`loan_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Loan request from users'", "description": "Creates a table named loan_request with 8 columns: loan_request_id (integer primary key), requestor_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), loan_id (integer), created_dt (datetime), updated_dt (datetime).", "concepts": ["CREATE TABLE", "INT", "PRIMARY KEY", "VARCHAR", "AUTO_INCREMENT", "FOREIGN KEY"], "instruction": "Write a SQL query to create a table named loan_request with 8 columns: loan_request_id (integer primary key), requestor_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), loan_id (integer), created_dt (datetime), updated_dt (datetime)."}
{"seed": "/* Drops the table named loan_types if it exists. */\nDROP TABLE IF EXISTS `loan_types`", "description": "Drops the table named loan_types if it exists.", "concepts": ["DROP TABLE"], "instruction": "Write a SQL query to drop the table named loan_types if it exists."}
{"seed": "/* Creates a table named loan_types with three columns: loan_type (varchar), loan_name (varchar), and loan_id (int). */\nCREATE TABLE `loan_types` (\r\n  `loan_type` varchar(50) DEFAULT NULL,\r\n  `loan_name` varchar(50) DEFAULT NULL,\r\n  `loan_id` int(11) NOT NULL,\r\n  PRIMARY KEY (`loan_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='Types of loans offered by platform'", "description": "Creates a table named loan_types with three columns: loan_type (varchar), loan_name (varchar), and loan_id (int).", "concepts": ["CREATE TABLE", "VARCHAR", "INT", "PRIMARY KEY"], "instruction": "Write a SQL query to create a table named loan_types with three columns: loan_type (varchar), loan_name (varchar), and loan_id (int)."}
{"seed": "/* Inserts five rows into the loan_types table. */\nINSERT INTO `loan_types` VALUES ('Home Loan','Home Loan',1),('Loan Against Property','Loan Against Property',2),('Balance Transfer & Top ups','Balance Transfer & Top ups',3),('Educational Loan','Educational Loan',4),('Term Loan Synidation','Term Loan Synidation',5)", "description": "Inserts five rows into the loan_types table.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert five rows into the loan_types table."}
{"seed": "/* Drops the table named paymet_txn_summary if it exists. */\nDROP TABLE IF EXISTS `paymet_txn_summary`", "description": "Drops the table named paymet_txn_summary if it exists.", "concepts": ["DROP TABLE"], "instruction": "Write a SQL query to drop the table named paymet_txn_summary if it exists."}
{"seed": "/* Creates a table named paymet_txn_summary with 9 columns: payment_id (integer primary key), payment_txnid (varchar), payu_txnid (varchar), service_request_id (integer), service_type (varchar), amount_paid (varchar), payment_status (varchar), created_dt (datetime), updated_dt (datetime). */\nCREATE TABLE `paymet_txn_summary` (\r\n  `payment_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `payment_txnid` varchar(200) DEFAULT NULL,\r\n  `payu_txnid` varchar(200) DEFAULT NULL,\r\n  `service_request_id` int(11) DEFAULT NULL,\r\n  `service_type` varchar(100) DEFAULT NULL,\r\n  `amount_paid` varchar(500) DEFAULT NULL,\r\n  `payment_status` varchar(45) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`payment_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='To trck payments paid through the site'", "description": "Creates a table named paymet_txn_summary with 9 columns: payment_id (integer primary key), payment_txnid (varchar), payu_txnid (varchar), service_request_id (integer), service_type (varchar), amount_paid (varchar), payment_status (varchar), created_dt (datetime), updated_dt (datetime).", "concepts": ["CREATE TABLE", "INT", "PRIMARY KEY", "VARCHAR", "AUTO_INCREMENT", "DEFAULT"], "instruction": "Write a SQL query to create a table named paymet_txn_summary with 9 columns: payment_id (integer primary key), payment_txnid (varchar), payu_txnid (varchar), service_request_id (integer), service_type (varchar), amount_paid (varchar), payment_status (varchar), created_dt (datetime), updated_dt (datetime)."}
{"seed": "/* Drops the table named registration_service_request if it exists. */\nDROP TABLE IF EXISTS `registration_service_request`", "description": "Drops the table named registration_service_request if it exists.", "concepts": ["DROP TABLE", "IF EXISTS"], "instruction": "Write a SQL query to drop the table named registration_service_request if it exists."}
{"seed": "/* Creates a table named registration_service_request with the following columns: registration_service_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), updated_dt (datetime), registration_service_type_id (integer). */\nCREATE TABLE `registration_service_request` (\r\n  `registration_service_request_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `requestor_full_name` varchar(50) DEFAULT NULL,\r\n  `requestor_phone_number` varchar(15) DEFAULT NULL,\r\n  `requestor_email_id` varchar(75) DEFAULT NULL,\r\n  `requestor_pan_number` varchar(20) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  `registration_service_type_id` int(11) DEFAULT NULL,\r\n  PRIMARY KEY (`registration_service_request_id`),\r\n  KEY `registration_service_fid_foreign_key_idx` (`registration_service_type_id`),\r\n  CONSTRAINT `registration_service_fid_foreign_key` FOREIGN KEY (`registration_service_type_id`) REFERENCES `registration_service_type` (`service_id`) ON DELETE NO ACTION ON UPDATE NO ACTION\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8", "description": "Creates a table named registration_service_request with the following columns: registration_service_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), updated_dt (datetime), registration_service_type_id (integer).", "concepts": ["CREATE TABLE", "INT", "PRIMARY KEY", "VARCHAR", "FOREIGN KEY", "REFERENCES", "ON"], "instruction": "Write a SQL query to create a table named registration_service_request with the following columns: registration_service_request_id (integer primary key), requestor_full_name (varchar), requestor_phone_number (varchar), requestor_email_id (varchar), requestor_pan_number (varchar), created_dt (datetime), updated_dt (datetime), registration_service_type_id (integer)."}
{"seed": "/* Drops the table named registration_service_type if it exists. */\nDROP TABLE IF EXISTS `registration_service_type`", "description": "Drops the table named registration_service_type if it exists.", "concepts": ["DROP TABLE", "IF EXISTS"], "instruction": "Write a SQL query to drop the table named registration_service_type if it exists."}
{"seed": "/* Creates a table named registration_service_type with three columns: service_id (integer primary key), service_name (varchar) and service_type (varchar). */\nCREATE TABLE `registration_service_type` (\r\n  `service_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `service_name` varchar(45) NOT NULL,\r\n  `service_type` varchar(45) DEFAULT NULL,\r\n  PRIMARY KEY (`service_id`)\r\n) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=utf8", "description": "Creates a table named registration_service_type with three columns: service_id (integer primary key), service_name (varchar) and service_type (varchar).", "concepts": ["CREATE TABLE", "AUTO_INCREMENT", "PRIMARY KEY", "VARCHAR", "INT", "DEFAULT"], "instruction": "Write a SQL query to create a table named registration_service_type with three columns: service_id (integer primary key), service_name (varchar) and service_type (varchar)."}
{"seed": "/* Inserts the values (1,'FSSAI Food License','license'), (2,'IEC Registration','registration'), (3,'Trade License','license'), (4,'ISO Registration','license'), (5,'Digital Signature (DSC)','license'), (6,'Employee State Insurance (ESI) Registration','license'), (7,'Employees Provident Fund','license'), (8,'Service Tax Registration','registration'), (9,'Sales Tax Registration','registration'), (10,'Prof */\nINSERT INTO `registration_service_type` VALUES (1,'FSSAI Food License','license'),(2,'IEC Registration','registration'),(3,'Trade License','license'),(4,'ISO Registration','license'),(5,'Digital Signature (DSC)','license'),(6,'Employee State Insurance (ESI) Registration','license'),(7,'Employees Provident Fund','license'),(8,'Service Tax Registration','registration'),(9,'Sales Tax Registration','registration'),(10,'Professional Tax Registration','registration'),(11,'Excise Tax Registration','registration')", "description": "Inserts the values (1,'FSSAI Food License','license'), (2,'IEC Registration','registration'), (3,'Trade License','license'), (4,'ISO Registration','license'), (5,'Digital Signature (DSC)','license'), (6,'Employee State Insurance (ESI) Registration','license'), (7,'Employees Provident Fund','license'), (8,'Service Tax Registration','registration'), (9,'Sales Tax Registration','registration'), (10,'Prof", "concepts": ["INSERT INTO", "VALUES", "license", "registration"], "instruction": "Write a SQL query to insert the values (1,'FSSAI Food License','license'), (2,'IEC Registration','registration'), (3,'Trade License','license'), (4,'ISO Registration','license'), (5,'Digital Signature (DSC)','license'), (6,'Employee State Insurance (ESI) Registration','license'), (7,'Employees Provident Fund','license'), (8,'Service Tax Registration','registration'), (9,'Sales Tax Registration','registration'), ("}
{"seed": "/* Drops the table named user_query if it exists. */\nDROP TABLE IF EXISTS `user_query`", "description": "Drops the table named user_query if it exists.", "concepts": ["DROP TABLE"], "instruction": "Write a SQL query to drop the table named user_query if it exists."}
{"seed": "/* Creates a table named user_query with seven columns: query_id (integer primary key), full_name (varchar), subject (varchar), message (text), email_id (varchar), created_dt (datetime), and updated_dt (datetime). */\nCREATE TABLE `user_query` (\r\n  `query_id` int(11) NOT NULL AUTO_INCREMENT,\r\n  `full_name` varchar(55) DEFAULT NULL,\r\n  `subject` varchar(100) DEFAULT NULL,\r\n  `message` text,\r\n  `email_id` varchar(50) DEFAULT NULL,\r\n  `created_dt` datetime DEFAULT NULL,\r\n  `updated_dt` datetime DEFAULT NULL,\r\n  PRIMARY KEY (`query_id`)\r\n) ENGINE=InnoDB DEFAULT CHARSET=utf8", "description": "Creates a table named user_query with seven columns: query_id (integer primary key), full_name (varchar), subject (varchar), message (text), email_id (varchar), created_dt (datetime), and updated_dt (datetime).", "concepts": ["CREATE TABLE", "AUTO_INCREMENT", "PRIMARY KEY", "VARCHAR", "INT", "DEFAULT"], "instruction": "Write a SQL query to create a table named user_query with seven columns: query_id (integer primary key), full_name (varchar), subject (varchar), message (text), email_id (varchar), created_dt (datetime), and updated_dt (datetime)."}
{"seed": "/* Drops the database named libraryautomation. */\ndrop database libraryautomation", "description": "Drops the database named libraryautomation.", "concepts": ["drop database"], "instruction": "Write a SQL query to drop the database named libraryautomation."}
{"seed": "/* Creates a database named libraryautomation. */\ncreate database libraryautomation", "description": "Creates a database named libraryautomation.", "concepts": ["create database"], "instruction": "Write a SQL query to create a database named libraryautomation."}
{"seed": "/* Creates a table named book with seven columns: BookId (integer primary key), BookName (varchar), author (varchar), Press (varchar), Price (varchar), Position (varchar), ISBN (varchar), status (varchar), Category (varchar), description (text), number (integer). */\ncreate table book(\n\tBookId int(6)  unsigned zerofill auto_increment not null,\n    BookName varchar(255) not null,\n    author varchar(255) not null,\n    Press varchar(255) not null,\n    Price varchar(255) not null,\n    Position varchar(255) not null,\n    ISBN varchar(255) not null,\n    status varchar(255) not null, -- available/reserved/lent\n    Category varchar(255) not null,\n    description text,\n    \n    number int not null,\n    PRIMARY KEY (BookId)\n)", "description": "Creates a table named book with seven columns: BookId (integer primary key), BookName (varchar), author (varchar), Press (varchar), Price (varchar), Position (varchar), ISBN (varchar), status (varchar), Category (varchar), description (text), number (integer).", "concepts": ["CREATE TABLE", "INT", "PRIMARY KEY", "VARCHAR", "TEXT", "INT", "AUTO_"], "instruction": "Write a SQL query to create a table named book with seven columns: BookId (integer primary key), BookName (varchar), author (varchar), Press (varchar), Price (varchar), Position (varchar), ISBN (varchar), status (varchar), Category (varchar), description (text), number (integer)."}
{"seed": "/* Creates a table named bookrecord with five columns: informationId (integer primary key), FineValue (float), LentDate (datetime), ReturnDate (datetime), BookId (integer), AcntNum (integer). */\ncreate table bookrecord(\n\tinformationId int(6)  unsigned zerofill auto_increment not null,\n    FineValue float,\n    LentDate DATETIME not null,\n    ReturnDate DATETIME,\n    BookId int(6) unsigned zerofill not null,\n    AcntNum int(6) unsigned zerofill not null,\n    PRIMARY KEY (informationId)\n    \n)", "description": "Creates a table named bookrecord with five columns: informationId (integer primary key), FineValue (float), LentDate (datetime), ReturnDate (datetime), BookId (integer), AcntNum (integer).", "concepts": ["CREATE TABLE", "INT", "PRIMARY KEY", "FLOAT", "DATETIME", "DATETIME"], "instruction": "Write a SQL query to create a table named bookrecord with five columns: informationId (integer primary key), FineValue (float), LentDate (datetime), ReturnDate (datetime), BookId (integer), AcntNum (integer)."}
{"seed": "/* Creates a table named optionRecord with five columns: informationId (integer primary key), BookId (integer), AcntNum (integer), reason (varchar), operation (varchar), creationDate (datetime). */\ncreate table optionRecord(\n\tinformationId int(6)  unsigned zerofill auto_increment not null,\n\tBookId int(6) unsigned zerofill not null,\n    AcntNum int(6) unsigned zerofill not null,\n\treason  varchar(255),\n\toperation varchar(255) not null,\n\tcreationDate DATETIME not null,\n\tPRIMARY KEY (informationId)\n\t\n\t\n)", "description": "Creates a table named optionRecord with five columns: informationId (integer primary key), BookId (integer), AcntNum (integer), reason (varchar), operation (varchar), creationDate (datetime).", "concepts": ["CREATE TABLE", "INT", "PRIMARY KEY", "VARCHAR", "DATETIME"], "instruction": "Write a SQL query to create a table named optionRecord with five columns: informationId (integer primary key), BookId (integer), AcntNum (integer), reason (varchar), operation (varchar), creationDate (datetime)."}
{"seed": "/* Creates a table named reserve with three columns: informationId (integer primary key), BookId (integer), AcntNum (integer), and createDate (datetime). */\ncreate table reserve(\n\tinformationId int(6)  unsigned zerofill auto_increment not null,\n\tBookId int(6) unsigned zerofill not null,\n    AcntNum int(6)  unsigned zerofill  not null,\n\tcreateDate DATETIME not null,\n\tPRIMARY KEY (informationId)\n)", "description": "Creates a table named reserve with three columns: informationId (integer primary key), BookId (integer), AcntNum (integer), and createDate (datetime).", "concepts": ["CREATE TABLE", "INT", "PRIMARY KEY", "VARCHAR", "DATETIME"], "instruction": "Write a SQL query to create a table named reserve with three columns: informationId (integer primary key), BookId (integer), AcntNum (integer), and createDate (datetime)."}
{"seed": "/* Creates a table named reader with five columns: AcntNum (integer primary key), Telephone (varchar), Password (varchar), Email (varchar), bookNumber (integer), registerDate (datetime), Deposit (float). */\ncreate table reader(\n\tAcntNum int(6)  unsigned zerofill auto_increment not null,\n\tTelephone varchar(255) not null,\n    Password varchar(255) not null,\n    Email varchar(255) not null,\n    bookNumber int not null,\n    registerDate DATETIME not null,\n    Deposit float not null,\n    PRIMARY KEY(AcntNum)\n)", "description": "Creates a table named reader with five columns: AcntNum (integer primary key), Telephone (varchar), Password (varchar), Email (varchar), bookNumber (integer), registerDate (datetime), Deposit (float).", "concepts": ["CREATE TABLE", "INT", "PRIMARY KEY", "VARCHAR", "DATETIME", "FLOAT"], "instruction": "Write a SQL query to create a table named reader with five columns: AcntNum (integer primary key), Telephone (varchar), Password (varchar), Email (varchar), bookNumber (integer), registerDate (datetime), Deposit (float)."}
{"seed": "/* Creates a table named librarian with two columns: AcntNum (varchar) and Password (varchar). AcntNum is the primary key of the table. */\ncreate table librarian(\n\tAcntNum varchar(255) not null,\n    Password varchar(255) not null,\n    PRIMARY KEY(AcntNum)\n)", "description": "Creates a table named librarian with two columns: AcntNum (varchar) and Password (varchar). AcntNum is the primary key of the table.", "concepts": ["CREATE TABLE", "VARCHAR", "PRIMARY KEY"], "instruction": "Write a SQL query to create a table named librarian with two columns: AcntNum (varchar) and Password (varchar). AcntNum is the primary key of the table."}
{"seed": "/* Creates a table named admin with two columns: AcntNum (varchar) and Password (varchar). AcntNum is the primary key of the table. */\ncreate table admin(\n\tAcntNum varchar(255) not null,\n    Password varchar(255) not null,\n    PRIMARY KEY(AcntNum)\n)", "description": "Creates a table named admin with two columns: AcntNum (varchar) and Password (varchar). AcntNum is the primary key of the table.", "concepts": ["CREATE TABLE", "VARCHAR", "PRIMARY KEY"], "instruction": "Write a SQL query to create a table named admin with two columns: AcntNum (varchar) and Password (varchar). AcntNum is the primary key of the table."}
{"seed": "/* Creates a table named announcement with three columns: TextId (varchar), Text (text), and Date (datetime). TextId is the primary key of the table. */\ncreate table announcement(\n\tTextId varchar(255) not null,\n    Text text not null,\n    Date DATETIME not null,\n    PRIMARY KEY(TextId)\n)", "description": "Creates a table named announcement with three columns: TextId (varchar), Text (text), and Date (datetime). TextId is the primary key of the table.", "concepts": ["CREATE TABLE", "VARCHAR", "TEXT", "DATETIME", "PRIMARY KEY"], "instruction": "Write a SQL query to create a table named announcement with three columns: TextId (varchar), Text (text), and Date (datetime). TextId is the primary key of the table."}
{"seed": "/* Creates a foreign key constraint on the acntnum column of the optionRecord table that references the acntnum column of the reader table. */\nalter table optionRecord\nadd constraint reader_optionRecord foreign key (`acntnum`)\nreferences reader(`acntnum`) on update cascade on delete CASCADE", "description": "Creates a foreign key constraint on the acntnum column of the optionRecord table that references the acntnum column of the reader table.", "concepts": ["alter table", "add constraint", "foreign key", "references", "on update", "on delete"], "instruction": "Write a SQL query to create a foreign key constraint on the acntnum column of the optionRecord table that references the acntnum column of the reader table."}
{"seed": "/* Creates a foreign key constraint on the bookId column of the optionRecord table that references the bookId column of the book table. */\nalter table optionRecord\nadd constraint book_optionRecord foreign key (`bookId`)\nreferences book(`bookId`) on update cascade on delete CASCADE", "description": "Creates a foreign key constraint on the bookId column of the optionRecord table that references the bookId column of the book table.", "concepts": ["alter table", "add constraint", "foreign key", "references", "on update", "on delete"], "instruction": "Write a SQL query to create a foreign key constraint on the bookId column of the optionRecord table that references the bookId column of the book table."}
{"seed": "/* Creates a foreign key constraint on the acntnum column of the reserve table that references the acntnum column of the reader table. */\nalter table reserve\nadd constraint reader_reserve foreign key (`acntnum`)\nreferences reader(`acntnum`) on update cascade on delete CASCADE", "description": "Creates a foreign key constraint on the acntnum column of the reserve table that references the acntnum column of the reader table.", "concepts": ["ALTER TABLE", "ADD CONSTRAINT", "FOREIGN KEY", "REFERENCES", "ON UPDATE", "ON DELETE"], "instruction": "Write a SQL query to create a foreign key constraint on the acntnum column of the reserve table that references the acntnum column of the reader table."}
{"seed": "/* Creates a foreign key constraint on the bookId column of the reserve table that references the bookId column of the book table. */\nalter table reserve\nadd constraint book_reserve foreign key (`bookId`)\nreferences book(`bookId`) on update cascade on delete CASCADE", "description": "Creates a foreign key constraint on the bookId column of the reserve table that references the bookId column of the book table.", "concepts": ["alter table", "add constraint", "foreign key", "references", "on update", "on delete"], "instruction": "Write a SQL query to create a foreign key constraint on the bookId column of the reserve table that references the bookId column of the book table."}
{"seed": "/* Creates a foreign key constraint on the acntnum column of the bookrecord table that references the acntnum column of the reader table. */\nalter table bookrecord\nadd constraint reader_bookrecord foreign key (`acntnum`)\nreferences reader(`acntnum`) on update cascade on delete CASCADE", "description": "Creates a foreign key constraint on the acntnum column of the bookrecord table that references the acntnum column of the reader table.", "concepts": ["alter table", "add constraint", "foreign key", "references", "on update", "on delete"], "instruction": "Write a SQL query to create a foreign key constraint on the acntnum column of the bookrecord table that references the acntnum column of the reader table."}
{"seed": "/* Adds a foreign key constraint to the bookrecord table that references the book table. */\nalter table bookrecord\nadd constraint book_bookrecord foreign key (`bookId`)\nreferences book(`bookId`) on update cascade on delete CASCADE", "description": "Adds a foreign key constraint to the bookrecord table that references the book table.", "concepts": ["alter table", "add constraint", "foreign key", "references", "on update", "on delete"], "instruction": "Write a SQL query to add a foreign key constraint to the bookrecord table that references the book table."}
{"seed": "/* Adds a new column named IMAGE_DATA to the EMPLOYEE table in the PUBLIC schema. The column is of type BLOB and can hold null values. */\nALTER TABLE PUBLIC.EMPLOYEE ADD IMAGE_DATA BLOB NULL", "description": "Adds a new column named IMAGE_DATA to the EMPLOYEE table in the PUBLIC schema. The column is of type BLOB and can hold null values.", "concepts": ["ALTER TABLE", "ADD", "BLOB", "NULL"], "instruction": "Write a SQL query to add a new column named IMAGE_DATA to the EMPLOYEE table in the PUBLIC schema. The column is of type BLOB and can hold null values."}
{"seed": "/* Creates a unique index named productbin_name_ind on the table_productbin table. The index is on the parent_type, parent_id, and NAME columns. */\nCREATE UNIQUE INDEX sa.productbin_name_ind ON sa.table_productbin(parent_type,parent_id,\"NAME\")", "description": "Creates a unique index named productbin_name_ind on the table_productbin table. The index is on the parent_type, parent_id, and NAME columns.", "concepts": ["CREATE UNIQUE INDEX", "ON", "parent_type", "parent_id", "NAME"], "instruction": "Write a SQL query to create a unique index named productbin_name_ind on the table_productbin table. The index is on the parent_type, parent_id, and NAME columns."}
{"seed": "/* Creates a table named chicken_lineage with four columns: id (integer primary key), lineage (varchar), chicken_color (varchar), and provider (varchar). */\nCREATE TABLE chicken_lineage (\n\tid INT NOT NULL AUTO_INCREMENT,\n\tlineage VARCHAR(15) NOT NULL,\n    chicken_color VARCHAR(15) NOT NULL,\n    provider VARCHAR(15) NOT NULL,\n\tPRIMARY KEY (id)\n) ENGINE=InnoDB DEFAULT CHARSET=UTF8MB4", "description": "Creates a table named chicken_lineage with four columns: id (integer primary key), lineage (varchar), chicken_color (varchar), and provider (varchar).", "concepts": ["CREATE TABLE", "NOT NULL", "AUTO_INCREMENT", "PRIMARY KEY", "ENGINE", "DEFAULT"], "instruction": "Write a SQL query to create a table named chicken_lineage with four columns: id (integer primary key), lineage (varchar), chicken_color (varchar), and provider (varchar)."}
{"seed": "/* Creates a table named shed_manufacturer with three columns: id (integer primary key), manufacturer (varchar), and active (boolean). */\nCREATE TABLE shed_manufacturer (\n\tid INT NOT NULL AUTO_INCREMENT,\n\tmanufacturer VARCHAR(15) NOT NULL,\n\tPRIMARY KEY (id)\n) ENGINE=InnoDB DEFAULT CHARSET=UTF8MB4", "description": "Creates a table named shed_manufacturer with three columns: id (integer primary key), manufacturer (varchar), and active (boolean).", "concepts": ["CREATE TABLE", "INT", "NOT NULL", "AUTO_INCREMENT", "PRIMARY KEY", "VARCHAR"], "instruction": "Write a SQL query to create a table named shed_manufacturer with three columns: id (integer primary key), manufacturer (varchar), and active (boolean)."}
{"seed": "/* Creates a table named shed with five columns: id (integer primary key), name (varchar), type (varchar), capacity (integer), model (varchar), and shed_manufacturer_id (integer). The shed_manufacturer_id column is a foreign key that references the id column in the shed_manufacturer table. */\nCREATE TABLE shed (\n  id INT NOT NULL AUTO_INCREMENT,\n  name VARCHAR(15) NOT NULL,\n  type VARCHAR(15) NOT NULL,\n  capacity INT NOT NULL,\n  model VARCHAR(15) NOT NULL,\n  shed_manufacturer_id  INT NOT NULL,\n  PRIMARY KEY (id),\n  FOREIGN KEY (shed_manufacturer_id) REFERENCES shed_manufacturer(id)\n) ENGINE=InnoDB DEFAULT CHARSET=UTF8MB4", "description": "Creates a table named shed with five columns: id (integer primary key), name (varchar), type (varchar), capacity (integer), model (varchar), and shed_manufacturer_id (integer). The shed_manufacturer_id column is a foreign key that references the id column in the shed_manufacturer table.", "concepts": ["CREATE TABLE", "NOT NULL", "AUTO_INCREMENT", "PRIMARY KEY", "FOREIGN KEY"], "instruction": "Write a SQL query to create a table named shed with five columns: id (integer primary key), name (varchar), type (varchar), capacity (integer), model (varchar), and shed_manufacturer_id (integer). The shed_manufacturer_id column is a foreign key that references the id column in the shed_manufacturer table."}
{"seed": "/* Creates a table named chicken_lot with seven columns: id (integer primary key), birth_date (date), accommodation_date (date), initial_quantity (integer), current_quantity (integer), debicking (varchar), chicken_lineage_id (integer), and shed_id (integer). The id column is set to auto increment, the birth_date and accommodation_date columns are set to not null, and the initial_quantity, */\nCREATE TABLE chicken_lot (\n  id INT NOT NULL AUTO_INCREMENT,\n  birth_date DATE NOT NULL,\n  accommodation_date DATE NOT NULL,\n  initial_quantity INT NOT NULL,\n  current_quantity INT NOT NULL,\n  debicking VARCHAR(15) NOT NULL,\n  chicken_lineage_id  INT NOT NULL,\n  shed_id  INT NOT NULL,\n  PRIMARY KEY (id),\n  FOREIGN KEY (chicken_lineage_id) REFERENCES chicken_lineage(id),\n  FOREIGN KEY (shed_id) REFERENCES shed(id)\n) ENGINE=InnoDB DEFAULT CHARSET=UTF8MB4", "description": "Creates a table named chicken_lot with seven columns: id (integer primary key), birth_date (date), accommodation_date (date), initial_quantity (integer), current_quantity (integer), debicking (varchar), chicken_lineage_id (integer), and shed_id (integer). The id column is set to auto increment, the birth_date and accommodation_date columns are set to not null, and the initial_quantity,", "concepts": ["CREATE TABLE", "AUTO_INCREMENT", "PRIMARY KEY", "FOREIGN KEY", "REFERENCES", "ENGINE"], "instruction": "Write a SQL query to create a table named chicken_lot with seven columns: id (integer primary key), birth_date (date), accommodation_date (date), initial_quantity (integer), current_quantity (integer), debicking (varchar), chicken_lineage_id (integer), and shed_id (integer). The id column is set to auto increment, the birth_date and accommodation_date columns are set to not null, and"}
{"seed": "/* Creates a table named creation_monitoring with 10 columns: id (integer primary key), age_week (integer), age_day (integer), date_week (date), body_weight (integer), food (integer), water (integer), discard (integer), mortality (integer), and chicken_lot_id (integer). The chicken_lot_id column is a foreign key that references the id column of the chicken_lot table. */\nCREATE TABLE creation_monitoring (\n  id INT NOT NULL AUTO_INCREMENT,\n  age_week INT NOT NULL,\n  age_day INT NOT NULL,\n  date_week DATE NOT NULL,\n  body_weight INT NOT NULL,\n  food INT NOT NULL,\n  water INT NOT NULL,\n  discard INT NOT NULL,\n  mortality INT NOT NULL,\n  chicken_lot_id  INT NOT NULL,\n  PRIMARY KEY (id),\n  FOREIGN KEY (chicken_lot_id) REFERENCES chicken_lot(id)\n) ENGINE=InnoDB DEFAULT CHARSET=UTF8MB4", "description": "Creates a table named creation_monitoring with 10 columns: id (integer primary key), age_week (integer), age_day (integer), date_week (date), body_weight (integer), food (integer), water (integer), discard (integer), mortality (integer), and chicken_lot_id (integer). The chicken_lot_id column is a foreign key that references the id column of the chicken_lot table.", "concepts": ["CREATE TABLE", "NOT NULL", "AUTO_INCREMENT", "PRIMARY KEY", "FOREIGN KEY"], "instruction": "Write a SQL query to create a table named creation_monitoring with 10 columns: id (integer primary key), age_week (integer), age_day (integer), date_week (date), body_weight (integer), food (integer), water (integer), discard (integer), mortality (integer), and chicken_lot_id (integer). The chicken_lot_id column is a foreign key that references the id column of the chicken_lot table."}
{"seed": "/* Creates a table named production_monitoring with 14 columns: id (integer primary key), age_week (integer), age_day (integer), date_week (date), body_weight (integer), food (integer), water (integer), discard (integer), mortality (integer), total_production (integer), first_eggs (integer), second_eggs (integer), egg_weight (integer), and chicken_lot_id (integer). The chicken_ */\nCREATE TABLE production_monitoring (\n  id INT NOT NULL AUTO_INCREMENT,\n  age_week INT NOT NULL,\n  age_day INT NOT NULL,\n  date_week DATE NOT NULL,\n  body_weight INT NOT NULL,\n  food INT NOT NULL,\n  water INT NOT NULL,\n  discard INT NOT NULL,\n  mortality INT NOT NULL,\n  total_production INT NOT NULL,\n  first_eggs INT NOT NULL,\n  second_eggs INT NOT NULL,\n  egg_weight INT NOT NULL,\n  chicken_lot_id  INT NOT NULL,\n  PRIMARY KEY (id),\n  FOREIGN KEY (chicken_lot_id) REFERENCES chicken_lot(id)\n) ENGINE=InnoDB DEFAULT CHARSET=UTF8MB4", "description": "Creates a table named production_monitoring with 14 columns: id (integer primary key), age_week (integer), age_day (integer), date_week (date), body_weight (integer), food (integer), water (integer), discard (integer), mortality (integer), total_production (integer), first_eggs (integer), second_eggs (integer), egg_weight (integer), and chicken_lot_id (integer). The chicken_", "concepts": ["CREATE TABLE", "INT", "NOT NULL", "AUTO_INCREMENT", "PRIMARY KEY", "FOREIGN"], "instruction": "Write a SQL query to create a table named production_monitoring with 14 columns: id (integer primary key), age_week (integer), age_day (integer), date_week (date), body_weight (integer), food (integer), water (integer), discard (integer), mortality (integer), total_production (integer), first_eggs (integer), second_eggs (integer), egg_weight (integer), and chicken_lot_id (integer"}
{"seed": "/* Inserts a new row into the shed_manufacturer table with the manufacturer Artabas. */\nINSERT INTO shed_manufacturer (manufacturer) values ('Artabas')", "description": "Inserts a new row into the shed_manufacturer table with the manufacturer Artabas.", "concepts": ["INSERT INTO", "VALUES"], "instruction": ""}
{"seed": "/* Inserts a new row into the shed_manufacturer table with the value Kilbra for the manufacturer column. */\nINSERT INTO shed_manufacturer (manufacturer) values ('Kilbra')", "description": "Inserts a new row into the shed_manufacturer table with the value Kilbra for the manufacturer column.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert a new row into the shed_manufacturer table with the value Kilbra for the manufacturer column."}
{"seed": "/* Inserts a new manufacturer named Plasson into the shed_manufacturer table. */\nINSERT INTO shed_manufacturer (manufacturer) values ('Plasson')", "description": "Inserts a new manufacturer named Plasson into the shed_manufacturer table.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert a new manufacturer named Plasson into the shed_manufacturer table."}
{"seed": "/* Inserts a new manufacturer named Pr\u00f3prio into the shed_manufacturer table. */\nINSERT INTO shed_manufacturer (manufacturer) values ('Pr\u00f3prio')", "description": "Inserts a new manufacturer named Pr\u00f3prio into the shed_manufacturer table.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert a new manufacturer named Pr\u00f3prio into the shed_manufacturer table."}
{"seed": "/* Inserts a new row into the chicken_lineage table with the lineage, chicken_color, and provider columns. */\nINSERT INTO chicken_lineage (lineage, chicken_color, provider) values ('Nick-Chick', 'Branca', 'H e N')", "description": "Inserts a new row into the chicken_lineage table with the lineage, chicken_color, and provider columns.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert a new row into the chicken_lineage table with the lineage, chicken_color, and provider columns."}
{"seed": "/* Inserts a new row into the chicken_lineage table with the lineage, chicken_color, and provider columns. */\nINSERT INTO chicken_lineage (lineage, chicken_color, provider) values ('Nick-Brown', 'Vermelha', 'H e N')", "description": "Inserts a new row into the chicken_lineage table with the lineage, chicken_color, and provider columns.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert a new row into the chicken_lineage table with the lineage, chicken_color, and provider columns."}
{"seed": "/* Inserts a new row into the chicken_lineage table with the lineage, chicken_color, and provider values. */\nINSERT INTO chicken_lineage (lineage, chicken_color, provider) values ('W-80',  'Branca', 'Hy-Line')", "description": "Inserts a new row into the chicken_lineage table with the lineage, chicken_color, and provider values.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert a new row into the chicken_lineage table with the lineage, chicken_color, and provider values."}
{"seed": "/* Inserts a new row into the chicken_lineage table with the lineage, chicken_color, and provider columns. */\nINSERT INTO chicken_lineage (lineage, chicken_color, provider) values ('Hy-Line Brown',  'Vermelha', 'Hy-Line')", "description": "Inserts a new row into the chicken_lineage table with the lineage, chicken_color, and provider columns.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert a new row into the chicken_lineage table with the lineage, chicken_color, and provider columns."}
{"seed": "/* Inserts a new shed into the shed table with the given values. */\nINSERT INTO shed (name, type, capacity, model, shed_manufacturer_id ) values ('A1', 'Automatizado', 10080, 'P45-10', 1)", "description": "Inserts a new shed into the shed table with the given values.", "concepts": ["INSERT INTO", "VALUES"], "instruction": ""}
{"seed": "/* Inserts a new shed into the shed table with the given values. */\nINSERT INTO shed (name, type, capacity, model, shed_manufacturer_id ) values ('A2', 'Automatizado', 10080, 'P45-10', 1)", "description": "Inserts a new shed into the shed table with the given values.", "concepts": ["INSERT INTO", "VALUES"], "instruction": ""}
{"seed": "/* Inserts a new shed into the shed table with the given values. */\nINSERT INTO shed (name, type, capacity, model, shed_manufacturer_id ) values ('C1', 'Convencional', 3072, 'Madeira', 4)", "description": "Inserts a new shed into the shed table with the given values.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert a new shed into the shed table with the given values."}
{"seed": "/* Inserts a new shed into the shed table with the given values. */\nINSERT INTO shed (name, type, capacity, model, shed_manufacturer_id ) values ('C2', 'Convencional', 3072, 'Madeira', 4)", "description": "Inserts a new shed into the shed table with the given values.", "concepts": ["INSERT INTO", "VALUES"], "instruction": "Write a SQL query to insert a new shed into the shed table with the given values."}
